export class HttpApi {
    /**
     * @param {IPFS} ipfs
     */
    constructor(ipfs: IPFS);
    _ipfs: import("ipfs-core-types").IPFS<any>;
    _log: import("@libp2p/logger").Logger;
    /** @type {Server[]} */
    _apiServers: Server[];
    /**
     * Starts the IPFS HTTP server
     */
    start(): Promise<void>;
    /**
     * @param {string} host
     * @param {string} port
     * @param {IPFS} ipfs
     * @param {Record<string, any>} cors
     */
    _createApiServer(host: string, port: string, ipfs: IPFS, cors: Record<string, any>): Promise<Hapi.Server<Hapi.ServerApplicationState>>;
    get apiAddr(): import("@multiformats/multiaddr").Multiaddr;
    stop(): Promise<void>;
}
export type IPFS = import('ipfs-core-types').IPFS;
export type Server = import('./types').Server;
export type libp2p = import('libp2p').Libp2p;
import Hapi from "@hapi/hapi";
//# sourceMappingURL=index.d.ts.map