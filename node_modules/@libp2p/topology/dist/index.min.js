(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2PTopology = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var Libp2PTopology=(()=>{var r=Object.defineProperty;var a=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var g=(n,o)=>{for(var e in o)r(n,e,{get:o[e],enumerable:!0})},y=(n,o,e,i)=>{if(o&&typeof o=="object"||typeof o=="function")for(let t of m(o))!p.call(n,t)&&t!==e&&r(n,t,{get:()=>o[t],enumerable:!(i=a(o,t))||i.enumerable});return n};var u=n=>y(r({},"__esModule",{value:!0}),n);var b={};g(b,{createTopology:()=>S});var s=Symbol.for("@libp2p/topology");var l=()=>{},c=class{min;max;peers;onConnect;onDisconnect;registrar;constructor(o){this.min=o.min??0,this.max=o.max??1/0,this.peers=new Set,this.onConnect=o.onConnect??l,this.onDisconnect=o.onDisconnect??l}get[Symbol.toStringTag](){return s.toString()}[s]=!0;async setRegistrar(o){this.registrar=o}disconnect(o){this.onDisconnect(o)}};function S(n){return new c(n)}return u(b);})();
return Libp2PTopology}));
