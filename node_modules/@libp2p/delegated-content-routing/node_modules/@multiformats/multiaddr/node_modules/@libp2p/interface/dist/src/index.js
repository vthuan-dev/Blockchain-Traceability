/**
 * @packageDocumentation
 *
 * Exports a `Libp2p` type for modules to use as a type argument.
 *
 * @example
 *
 * ```typescript
 * import type { Libp2p } from '@libp2p/interface'
 *
 * function doSomethingWithLibp2p (node: Libp2p) {
 *   // ...
 * }
 * ```
 */
/**
 * This symbol is used by libp2p services to define the capabilities they can
 * provide to other libp2p services.
 *
 * The service should define a property with this symbol as the key and the
 * value should be a string array of provided capabilities.
 */
export const serviceCapabilities = Symbol.for('@libp2p/service-capabilities');
/**
 * This symbol is used by libp2p services to define the capabilities they
 * require from other libp2p services.
 *
 * The service should define a property with this symbol as the key and the
 * value should be a string array of required capabilities.
 */
export const serviceDependencies = Symbol.for('@libp2p/service-dependencies');
export * from './connection/index.js';
export * from './connection-encrypter/index.js';
export * from './connection-gater/index.js';
export * from './content-routing/index.js';
export * from './keys/index.js';
export * from './metrics/index.js';
export * from './peer-discovery/index.js';
export * from './peer-id/index.js';
export * from './peer-info/index.js';
export * from './peer-routing/index.js';
export * from './peer-store/index.js';
export * from './peer-store/tags.js';
export * from './pubsub/index.js';
export * from './record/index.js';
export * from './stream-handler/index.js';
export * from './stream-muxer/index.js';
export * from './topology/index.js';
export * from './transport/index.js';
export * from './errors.js';
export * from './event-target.js';
export * from './events.js';
export * from './startable.js';
//# sourceMappingURL=index.js.map