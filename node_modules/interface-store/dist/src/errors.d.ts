export declare class OpenFailedError extends Error {
    static name: string;
    static code: string;
    name: string;
    code: string;
    constructor(message?: string);
}
export declare class CloseFailedError extends Error {
    static name: string;
    static code: string;
    name: string;
    code: string;
    constructor(message?: string);
}
export declare class PutFailedError extends Error {
    static name: string;
    static code: string;
    name: string;
    code: string;
    constructor(message?: string);
}
export declare class GetFailedError extends Error {
    static name: string;
    static code: string;
    name: string;
    code: string;
    constructor(message?: string);
}
export declare class DeleteFailedError extends Error {
    static name: string;
    static code: string;
    name: string;
    code: string;
    constructor(message?: string);
}
export declare class HasFailedError extends Error {
    static name: string;
    static code: string;
    name: string;
    code: string;
    constructor(message?: string);
}
export declare class NotFoundError extends Error {
    static name: string;
    static code: string;
    name: string;
    code: string;
    constructor(message?: string);
}
export declare class AbortError extends Error {
    static name: string;
    static code: string;
    name: string;
    code: string;
    constructor(message?: string);
}
//# sourceMappingURL=errors.d.ts.map