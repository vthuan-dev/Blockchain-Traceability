export default command;
export type BlockCodec<T> = import('multiformats/codecs/interface').BlockCodec<number, T>;
export type Argv = {
    ctx: import('../../types').Context;
    cidpath: string;
    outputCodec: 'dag-json' | 'dag-cbor' | 'dag-pb' | 'raw';
    dataEnc: 'base16' | 'base64' | 'base58btc';
    localResolve: boolean;
    timeout: number;
};
/**
 * @typedef {object} Argv
 * @property {import('../../types').Context} Argv.ctx
 * @property {string} Argv.cidpath
 * @property {'dag-json' | 'dag-cbor' | 'dag-pb' | 'raw'} Argv.outputCodec
 * @property {'base16' | 'base64' | 'base58btc'} Argv.dataEnc
 * @property {boolean} Argv.localResolve
 * @property {number} Argv.timeout
 */
/** @type {import('yargs').CommandModule<Argv, Argv>} */
declare const command: import('yargs').CommandModule<Argv, Argv>;
//# sourceMappingURL=get.d.ts.map